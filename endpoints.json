{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles",
    "exampleResponse": {
      "articles": [
        {
          "title": "The Lord of the Rings",
          "topic": "fiction",
          "author": "John Ronald Reuel Tolkien",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "comment_count": 6
        }
      ]
    }
  },
  "GET /api/users": {
    "description": "serves an array of all users",
    "queries": [],
    "exampleResponse": {
      "users": [
        {
          "username": "The White Wizard",
          "name": "Gandalf",
          "avatar_url": "https://example.com/avatar.jpg"
        }
      ]
    }
  },
  "GET /api/articles/:article_id": {
    "description": "serves a single article object by article ID",
    "queries": [],
    "exampleResponse": {
      "article": {
        "article_id": 2,
        "author": "John Ronald Reuel Tolkien",
        "title": "The Lord of the Rings",
        "body": "Text from the article..",
        "topic": "fiction",
        "created_at": "2018-05-30T15:59:13.341Z",
        "votes": 0,
        "article_img_url": "https://example.com/image.jpg"
      }
    }
  },
  "GET /api/articles/:article_id/comments": {
    "description": "serves an array of comments for the given article ID, sorted by created_at (most recent first)",
    "queries": [],
    "exampleResponse": {
      "comments": [
        {
          "comment_id": 5,
          "votes": 0,
          "created_at": "2018-05-30T15:59:13.341Z",
          "author": "Gandalf",
          "body": "YOU SHALL NOT PASS!!",
          "article_id": 1
        }
      ]
    }
  },
  "POST /api/articles/:article_id/comments": {
    "description": "adds a new comment to the specified article and returns the posted comment",
    "queries": [],
    "exampleRequestBody": {
      "username": "Gandalf",
      "body": "Not all those who wander are lost"
    },
    "exampleResponse": {
      "comment": {
        "comment_id": 19,
        "article_id": 3,
        "author": "Gandalf",
        "body": "Not all those who wander are lost",
        "votes": 0,
        "created_at": "2018-05-30T15:59:13.341Z"
      }
    }
  },
  "PATCH /api/articles/:article_id": {
    "description": "updates the votes on an article by the specified amount and returns the updated article",
    "queries": [],
    "exampleRequestBody": {
      "inc_votes": 5
    },
    "exampleResponse": {
      "article": {
        "article_id": 2,
        "author": "John Ronald Reuel Tolkien",
        "title": "The Lord of the Rings",
        "body": "Text from the article..",
        "topic": "cooking",
        "created_at": "2018-05-30T15:59:13.341Z",
        "votes": 5,
        "article_img_url": "https://example.com/image.jpg"
      }
    }
  },
  "PATCH /api/comments/:comment_id": {
    "description": "updates the votes on a comment by the specified amount and returns the updated comment",
    "queries": [],
    "exampleRequestBody": {
      "inc_votes": -2
    },
    "exampleResponse": {
      "comment": {
        "comment_id": 5,
        "article_id": 1,
        "author": "Gandalf",
        "body": "YOU SHALL NOT PASS!!",
        "votes": -2,
        "created_at": "2018-05-30T15:59:13.341Z"
      }
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "deletes the comment with the given comment_id and responds with no content",
    "queries": [],
    "exampleResponse": {}
  },

  "GET /api/users/:username": {
    "description": "retrieves a user object by their username",
    "queries": [],
    "exampleRequestBody": {},
    "exampleResponse": {
      "user": {
        "username": "jessjelly",
        "name": "Jess Jelly",
        "avatar_url": "https://example.com/avatar.jpg"
      }
    }
  },

  "POST /api/users": {
    "description": "Creates a new user with a unique username, name, and avatar URL. Responds with the newly created user object.",
    "queries": [],
    "exampleRequestBody": {
      "username": "newuser123",
      "name": "New User",
      "avatar_url": "https://example.com/newuser-avatar.jpg"
    },
    "exampleResponse": {
      "user": {
        "username": "newuser123",
        "name": "New User",
        "avatar_url": "https://example.com/newuser-avatar.jpg"
      }
    }
  }
}
